package io.github.sunshinewzy.sunstcore.enums

import io.github.sunshinewzy.sunstcore.interfaces.Materialsable
import org.bukkit.Material
import org.bukkit.Material.*

enum class SMaterial(val types: List<Material>): Materialsable {
    FENCE(OAK_FENCE, ACACIA_FENCE, BIRCH_FENCE, CRIMSON_FENCE, DARK_OAK_FENCE, JUNGLE_FENCE, NETHER_BRICK_FENCE, SPRUCE_FENCE, WARPED_FENCE),
    FENCE_WOOD(OAK_FENCE, ACACIA_FENCE, BIRCH_FENCE, CRIMSON_FENCE, DARK_OAK_FENCE, JUNGLE_FENCE, SPRUCE_FENCE),
    
    WOOD(OAK_WOOD, JUNGLE_WOOD, ACACIA_WOOD, BIRCH_WOOD, DARK_OAK_WOOD, SPRUCE_WOOD),
    LOG(OAK_LOG, JUNGLE_LOG, ACACIA_LOG, BIRCH_LOG, DARK_OAK_LOG, SPRUCE_LOG),
    PLANKS(OAK_PLANKS, JUNGLE_PLANKS, ACACIA_PLANKS, BIRCH_PLANKS, DARK_OAK_PLANKS, SPRUCE_PLANKS),
    
    
    SLAB(OAK_SLAB, WARPED_SLAB, STONE_SLAB, STONE_BRICK_SLAB, SPRUCE_SLAB, SMOOTH_STONE_SLAB, SMOOTH_SANDSTONE_SLAB, SMOOTH_RED_SANDSTONE_SLAB, SMOOTH_QUARTZ_SLAB, SANDSTONE_SLAB, RED_SANDSTONE_SLAB, RED_NETHER_BRICK_SLAB, QUARTZ_SLAB, PURPUR_SLAB, PRISMARINE_SLAB, PRISMARINE_BRICK_SLAB, POLISHED_GRANITE_SLAB, POLISHED_DIORITE_SLAB, POLISHED_BLACKSTONE_SLAB, POLISHED_BLACKSTONE_BRICK_SLAB, POLISHED_ANDESITE_SLAB, PETRIFIED_OAK_SLAB, NETHER_BRICK_SLAB, MOSSY_STONE_BRICK_SLAB, MOSSY_COBBLESTONE_SLAB, ACACIA_SLAB, ANDESITE_SLAB, BIRCH_SLAB, BLACKSTONE_SLAB, BRICK_SLAB, COBBLESTONE_SLAB, CRIMSON_SLAB, CUT_RED_SANDSTONE_SLAB, CUT_SANDSTONE_SLAB, DARK_OAK_SLAB, DARK_PRISMARINE_SLAB, DIORITE_SLAB, END_STONE_BRICK_SLAB, GRANITE_SLAB, JUNGLE_SLAB),
    SLAB_WOOD(OAK_SLAB, JUNGLE_SLAB, ACACIA_SLAB, BIRCH_SLAB, DARK_OAK_SLAB, SPRUCE_SLAB),
    
    WOOL(WHITE_WOOL, BLACK_WOOL, BLUE_WOOL, BROWN_WOOL, CYAN_WOOL, GRAY_WOOL, GREEN_WOOL, LIGHT_BLUE_WOOL, LIGHT_GRAY_WOOL, LIME_WOOL, MAGENTA_WOOL, ORANGE_WOOL, PINK_WOOL, PURPLE_WOOL, RED_WOOL, YELLOW_WOOL),
    
    LEAVES(OAK_LEAVES, ACACIA_LEAVES, BIRCH_LEAVES, DARK_OAK_LEAVES, JUNGLE_LEAVES, SPRUCE_LEAVES),
    SAPLING(OAK_SAPLING, ACACIA_SAPLING, BAMBOO_SAPLING, BIRCH_SAPLING, DARK_OAK_SAPLING, JUNGLE_SAPLING, SPRUCE_LEAVES),
    
    TRAPDOOR(OAK_TRAPDOOR, ACACIA_TRAPDOOR, BIRCH_TRAPDOOR, CRIMSON_TRAPDOOR, DARK_OAK_TRAPDOOR, IRON_TRAPDOOR, JUNGLE_TRAPDOOR, SPRUCE_TRAPDOOR, WARPED_TRAPDOOR),
    TRAPDOOR_WOOD(OAK_TRAPDOOR, ACACIA_TRAPDOOR, BIRCH_TRAPDOOR, CRIMSON_TRAPDOOR, DARK_OAK_TRAPDOOR, JUNGLE_TRAPDOOR, SPRUCE_TRAPDOOR, WARPED_TRAPDOOR)
    
    ;
    
    
    constructor(vararg types: Material) : this(types.toList())


    override fun types(): List<Material> = types
    
    
    operator fun contains(type: Material): Boolean = types.contains(type)
    

    companion object {
        val leavesToSapling = mapOf(ACACIA_LEAVES to ACACIA_SAPLING, BIRCH_LEAVES to BIRCH_SAPLING, DARK_OAK_LEAVES to DARK_OAK_SAPLING, JUNGLE_LEAVES to JUNGLE_SAPLING, OAK_LEAVES to OAK_SAPLING, SPRUCE_LEAVES to SPRUCE_SAPLING)
        
        
        fun Material.getSapling(): Material =
            leavesToSapling[this] ?: OAK_SAPLING
    }
    
}